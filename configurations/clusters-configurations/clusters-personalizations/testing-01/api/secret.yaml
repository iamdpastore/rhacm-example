apiVersion: v1
data:
  tls.crt: 
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRFhmd0xBMERGMS90TEoKa3NxcWdJVDE1aUh3bjJUWVBMUXpxTjZLd3o3TGRINDQ5ZnNKbkdwT1kzeThzcVZCN2RWdlBuNHBqTEsyK1N4MgpDRUJaQ3BTd2ltNSt3Q3lZVk05d0FjOFBSei9PU2F5dmxRczA0bEFpekZqVUZxU3RxbFpiRSt3dzJsRGFPNHBiCmtJcXZESkVSdlNvT0Y5Rit1K2hQS1B2bjk5V1RySG51VVRseWNnOHdRRGxvOHJ1ajFNZUQ1WmhJSjFoaDc3dmsKTFA4d1QveENpbGt4L3NvWW1iUDZPNkhPRmlvREx2TDBCZ2gzTkhmeVZQdVlhV0ltZHk5SUM3aEVwQmFFalNSYQpPdm8zWVQ3bXJrYjNVSkNVcy9zU3J2Z0wxd1NKNHNZMGgrR1Y0UXl0akxKVGM3c1ZKdWtpNGZ2R0hTOUlNalBtCmRaTUorQTRGQWdNQkFBRUNnZ0VCQU5FZnFaMVJyTjRVSjV5RC9uY045M25tRmNPNyt4STVmcXF2VXgrWUwrVWoKTEthOFZ4elJsUHh6WVlhQld3d3E4TGhmRGZIbVh6eGZmTDBpYnNlNkUrZHF2Nlh6ZXBOdG9relJCSTZRRnlScQpyTkZMc3k5ai9GNTRyaTlMdGczdVFwVnFOUWlIcEhUVDJRWFl0QzBCNWZvdjk1THJuRnIvb1liSWdBVnhwZXNDCmFiRlk1Zmc0M1gyUXJrVHl2aHVqSzAwL1ZZVzZYaVRwMGlaOUllVlZ4RUpjUzlTc0ZYOXVmQXl5aW5GMGxkSGQKWUZLOEFQKzJYWk1kc3BBOGEvTXJET0FVMjhqV0E2VlRyQkpxYzNpRTlGdjUwaEZ5SUlRNlpvOWVnU1daR3hIVgpReUhxN1NiVzU4WjVHb2hrNHJ2bkE0bWcvZjFLVS8wTWpLTGYrUm0vWDNVQ2dZRUEvWXUweUR1amJVdHMxYU80CjMyZ3FwS1FhOVk1b3VPY3h6Wi9Ca0x2RjdGY2txeDFod0xKYVg1MERoQlZVWEVVR2ZtbDIvUzRLaTI4V0IxMi8KYnN2endlakhMZ000L3RBSUR5YVFQQlpHcUJQZ1JqWWVjL2xwaU1kcHdEUzhQeVZQRkFxbzVqS3VhbE0xVUF4UApuVGoxZDRLLzAxeC9hZW91K3MrcE5WV21MQzhDZ1lFQTJaVUVQVVNrZTBBQUZSbFdSQnM3ZG9sbVV2VWdCNkI3CmhzTHhlbEhYNEJkaDc0OFV3eDc2RmZUVnRnSUZITUNHS1YremIrcmVFMU53K1FMcUpPR3NHQWRrNjJLbHQ4NlMKNWxrUUxMZmxIRTNYeDdBajNkd3JiZENjRFZoNFdjbHlsN21seTU4REtJUVlidmFnZnRValVFVWI1bkkwY0JodgpPcDczRExDY1dBc0NnWUFQY3Fpa0hvWVpqYVBtN0YvQ05OMk1SSGRrQ0xZMnRkZGgrTjdaUzZlR2U5Uy9IRDR0CmVIQnJMT3plNmxIR2dXb2czNW9oV09ISmx3NFhpczIwR1hjVGxIUTJTSG43aEg5Sk5RZEtzZXpDSnR2ZVMwUFYKdXhlRC91cGhqSlQvbisxT2drdkNJc3Bmcmd3c2dXT0VaOGtFN0JGMTlrZkpFenlqaVcxODAyZ1pmd0tCZ1FETwpUZGtqTHI2MmpreUZ0T3h5ejA5bWFZazRCMnhEVHd0UkQrNWZDTk1qaTRnMDJQbmF1TGh2c1NJaDNYQnpmcWkyCitpTHRiMGo2RWhnQVE1ODNNVE0zNVdydk5TM2tSbDVMUXc5dkZ6Nkp3OVZoWmNYY1N6SnlnV1kxMFRqc0NYSTYKSXJEdGpPdzFzbXBvYkRocGlqWmRtZW1HYTZzRXptWklzd21VWXJFYldRS0JnQ0RJaUZSdG1LVUk5UzF5a1pwVwpnWWEzLzQ1OUI3QlNSeEdXMEo3VkxPWXZzU1cxbFdla1ppdEJnNDZ2M2YvN0ROdDdEWUVwOEd1d1dxMExTMzNvCm50alovM21EN0pJdW5qZFRYRjdDeVR0K3VWbUYzK0kvT3RabnZnRlZkbFcrYXBJcjJMWGk1QmIvZGQwbVA1eFcKL0RDQ3JRQnZMdmJrY3NXc0JDTEM2SjZ0Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  name: api-cert
  namespace: openshift-config
type: kubernetes.io/tls
